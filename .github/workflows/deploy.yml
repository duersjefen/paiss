name: Build and Deploy to Production

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Deployment Summary
        run: |
          echo "### Build Complete! 🚀" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Image pushed to:** \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Tags:**" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build-and-push

    # GitHub Environment with manual approval protection
    # Configure at: Settings → Environments → production → Required reviewers
    environment:
      name: production
      url: https://paiss.me

    steps:
      - name: 🔑 Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: 🚀 Deploy to Production
        env:
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          # Create deployment script
          cat > deploy_paiss.sh << 'DEPLOY_SCRIPT'
          #!/bin/bash
          set -e

          echo "🚀 Starting PAISS production deployment..."

          cd /opt/multi-tenant-platform

          # Update platform code
          echo "📦 Updating platform code..."
          git pull origin main 2>/dev/null || echo "⚠️  Using existing platform code"

          # Authenticate to GHCR
          echo "🔑 Authenticating to GitHub Container Registry..."
          echo "$GHCR_TOKEN" | docker login ghcr.io -u duersjefen --password-stdin

          # Deploy PAISS
          echo "🚢 Deploying PAISS..."
          PLATFORM_ROOT=/opt/multi-tenant-platform \
          ENVIRONMENT=production \
          ./lib/deploy.sh paiss production

          # Verify deployment
          echo "🔍 Verifying deployment..."
          sleep 10

          if docker exec paiss-web curl -f http://localhost/health 2>/dev/null; then
            echo "✅ PAISS is healthy"
          else
            echo "❌ Health check failed"
            exit 1
          fi

          echo "✅ PAISS deployment complete!"
          echo "🌐 Live at https://paiss.me"
          DEPLOY_SCRIPT

          # Execute on EC2
          scp -o StrictHostKeyChecking=no deploy_paiss.sh ${EC2_USER}@${EC2_HOST}:/tmp/
          ssh -o StrictHostKeyChecking=no ${EC2_USER}@${EC2_HOST} \
            "GHCR_TOKEN='${{ secrets.GHCR_TOKEN }}' bash /tmp/deploy_paiss.sh"

      - name: ✅ Deployment Success
        if: success()
        run: |
          echo "### ✅ Production Deployment Successful!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🌐 **Live at:** https://paiss.me" >> $GITHUB_STEP_SUMMARY
          echo "📝 **Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "👤 **Deployed by:** ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
