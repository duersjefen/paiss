# =============================================================================
# Automated Staging Deployment
# =============================================================================
# Triggers automatically after successful image build
# Deploys to: https://staging.paiss.me
# =============================================================================

name: Deploy to Staging

on:
  workflow_run:
    workflows: ["Build and Push Docker Image"]
    types:
      - completed
    branches:
      - main
  workflow_dispatch:  # Manual trigger option

jobs:
  deploy-staging:
    name: Deploy to Staging Environment
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}

    environment:
      name: staging
      url: https://staging.paiss.me

    steps:
      - name: 🔑 Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: 🚀 Deploy to Staging
        env:
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          # Create deployment script
          cat > deploy_staging.sh << 'DEPLOY_SCRIPT'
          #!/bin/bash
          set -e

          echo "🚀 Starting PAISS staging deployment..."

          cd /opt/multi-tenant-platform

          # Update platform code
          echo "📦 Updating platform code..."
          git pull origin main 2>/dev/null || echo "⚠️  Using existing platform code"

          # Authenticate to GHCR
          echo "🔑 Authenticating to GitHub Container Registry..."
          echo "$GHCR_TOKEN" | docker login ghcr.io -u duersjefen --password-stdin

          # Create staging env file
          echo "📝 Creating environment configuration..."
          cat > configs/paiss/.env.staging << EOF
          # PAISS Staging Environment
          CONTAINER_NAME=paiss-web-staging
          ENVIRONMENT=staging
          IMAGE=ghcr.io/duersjefen/paiss:latest
          EOF

          chmod 600 configs/paiss/.env.staging

          # Deploy to staging
          echo "🚢 Deploying PAISS to staging..."
          PLATFORM_ROOT=/opt/multi-tenant-platform \
          ENVIRONMENT=staging \
          ./lib/deploy.sh paiss staging

          # Verify deployment
          echo "🔍 Verifying deployment..."
          sleep 10

          if docker exec paiss-web-staging curl -f http://localhost/health 2>/dev/null; then
            echo "✅ PAISS staging is healthy"
          else
            echo "❌ Health check failed"
            exit 1
          fi

          echo "✅ Staging deployment complete!"
          DEPLOY_SCRIPT

          # Execute on EC2
          scp -o StrictHostKeyChecking=no deploy_staging.sh ${EC2_USER}@${EC2_HOST}:/tmp/
          ssh -o StrictHostKeyChecking=no ${EC2_USER}@${EC2_HOST} \
            "GHCR_TOKEN='${{ secrets.GHCR_TOKEN }}' bash /tmp/deploy_staging.sh"

      - name: 🧪 Run Post-Deployment Tests
        env:
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          echo "🧪 Testing staging deployment..."

          ssh ${EC2_USER}@${EC2_HOST} \
            'docker exec paiss-web-staging curl -f http://localhost/health' || exit 1

          echo "✅ All health checks passed"

      - name: 📢 Deployment Success
        if: success()
        run: |
          echo "### ✅ Staging Deployment Successful!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🌐 **URL:** https://staging.paiss.me" >> $GITHUB_STEP_SUMMARY
          echo "📝 **Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "👤 **Author:** ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Next:** Test manually, then trigger production deployment" >> $GITHUB_STEP_SUMMARY

      - name: 🔄 Rollback on Failure
        if: failure()
        env:
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          echo "❌ Deployment failed! Attempting rollback..."
          ssh ${EC2_USER}@${EC2_HOST} \
            'cd /opt/multi-tenant-platform && ./lib/rollback.sh paiss staging' || true
          echo "🔄 Rollback complete"
          exit 1
